
// This file has been generated by the GUI designer. Do not modify.

public partial class MainWindow
{
	private global::Gtk.UIManager UIManager;
	private global::Gtk.Action FileAction;
	private global::Gtk.Action newAction;
	private global::Gtk.Action openAction;
	private global::Gtk.Action saveAction;
	private global::Gtk.Action saveAsAction;
	private global::Gtk.Action EditAction;
	private global::Gtk.Action cutAction;
	private global::Gtk.Action copyAction;
	private global::Gtk.Action pasteAction;
	private global::Gtk.Action SpecialAction;
	private global::Gtk.Action printAction;
	private global::Gtk.Action quitAction;
	private global::Gtk.Action aboutAction;
	private global::Gtk.VBox vbox1;
	private global::Gtk.MenuBar menubar1;
	private global::Gtk.Toolbar toolbar1;
	private global::Gtk.VPaned vpaned1;
	private global::Gtk.HPaned hpaned1;
	private global::Gtk.Notebook notebookEditor;
	private global::Gtk.HPaned editorPane;
	private global::Gtk.TextView editorLines;
	private global::Gtk.ScrolledWindow GtkScrolledWindow1;
	private global::Gtk.TextView editorTextArea;
	private global::Gtk.Label fileNameLabel;
	private global::Gtk.Notebook notebookPanel;
	private global::Gtk.ScrolledWindow GtkScrolledWindow2;
	private global::Gtk.TextView lexemeOutput;
	private global::Gtk.Label label1;
	private global::Gtk.Label label2;
	private global::Gtk.ScrolledWindow GtkScrolledWindow;
	private global::Gtk.TextView compilerOutput;
	
	protected virtual void Build ()
	{
		global::Stetic.Gui.Initialize (this);
		// Widget MainWindow
		this.UIManager = new global::Gtk.UIManager ();
		global::Gtk.ActionGroup w1 = new global::Gtk.ActionGroup ("Default");
		this.FileAction = new global::Gtk.Action ("FileAction", global::Mono.Unix.Catalog.GetString ("File"), null, null);
		this.FileAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("File");
		w1.Add (this.FileAction, null);
		this.newAction = new global::Gtk.Action ("newAction", global::Mono.Unix.Catalog.GetString ("New"), global::Mono.Unix.Catalog.GetString ("Create a new text file"), "gtk-new");
		this.newAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("New");
		w1.Add (this.newAction, null);
		this.openAction = new global::Gtk.Action ("openAction", global::Mono.Unix.Catalog.GetString ("Open"), global::Mono.Unix.Catalog.GetString ("Open a new text file"), "gtk-open");
		this.openAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Open");
		w1.Add (this.openAction, null);
		this.saveAction = new global::Gtk.Action ("saveAction", global::Mono.Unix.Catalog.GetString ("Save"), null, "gtk-save");
		this.saveAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Save");
		w1.Add (this.saveAction, null);
		this.saveAsAction = new global::Gtk.Action ("saveAsAction", global::Mono.Unix.Catalog.GetString ("Save as..."), null, "gtk-save-as");
		this.saveAsAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Save as...");
		w1.Add (this.saveAsAction, null);
		this.EditAction = new global::Gtk.Action ("EditAction", global::Mono.Unix.Catalog.GetString ("Edit"), null, null);
		this.EditAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Edit");
		w1.Add (this.EditAction, null);
		this.cutAction = new global::Gtk.Action ("cutAction", global::Mono.Unix.Catalog.GetString ("Cut"), null, "gtk-cut");
		this.cutAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Cut");
		w1.Add (this.cutAction, null);
		this.copyAction = new global::Gtk.Action ("copyAction", global::Mono.Unix.Catalog.GetString ("Copy"), null, "gtk-copy");
		this.copyAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Copy");
		w1.Add (this.copyAction, null);
		this.pasteAction = new global::Gtk.Action ("pasteAction", global::Mono.Unix.Catalog.GetString ("Paste"), null, "gtk-paste");
		this.pasteAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Paste");
		w1.Add (this.pasteAction, null);
		this.SpecialAction = new global::Gtk.Action ("SpecialAction", global::Mono.Unix.Catalog.GetString ("Special"), null, null);
		this.SpecialAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Special");
		w1.Add (this.SpecialAction, null);
		this.printAction = new global::Gtk.Action ("printAction", global::Mono.Unix.Catalog.GetString ("Compile"), null, "gtk-print");
		this.printAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Compile");
		w1.Add (this.printAction, null);
		this.quitAction = new global::Gtk.Action ("quitAction", global::Mono.Unix.Catalog.GetString ("_Quit"), null, "gtk-quit");
		this.quitAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Quit");
		w1.Add (this.quitAction, null);
		this.aboutAction = new global::Gtk.Action ("aboutAction", global::Mono.Unix.Catalog.GetString ("About"), null, "gtk-about");
		this.aboutAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("About");
		w1.Add (this.aboutAction, null);
		this.UIManager.InsertActionGroup (w1, 0);
		this.AddAccelGroup (this.UIManager.AccelGroup);
		this.Name = "MainWindow";
		this.Title = global::Mono.Unix.Catalog.GetString ("HSharp");
		this.WindowPosition = ((global::Gtk.WindowPosition)(4));
		// Container child MainWindow.Gtk.Container+ContainerChild
		this.vbox1 = new global::Gtk.VBox ();
		this.vbox1.Name = "vbox1";
		this.vbox1.Spacing = 6;
		// Container child vbox1.Gtk.Box+BoxChild
		this.UIManager.AddUiFromString ("<ui><menubar name='menubar1'><menu name='FileAction' action='FileAction'><menuitem name='newAction' action='newAction'/><menuitem name='openAction' action='openAction'/><menuitem name='saveAction' action='saveAction'/><menuitem name='saveAsAction' action='saveAsAction'/><separator/><menuitem name='quitAction' action='quitAction'/></menu><menu name='EditAction' action='EditAction'><menuitem name='cutAction' action='cutAction'/><menuitem name='copyAction' action='copyAction'/><menuitem name='pasteAction' action='pasteAction'/></menu><menu name='SpecialAction' action='SpecialAction'><menuitem name='printAction' action='printAction'/><menuitem name='aboutAction' action='aboutAction'/></menu></menubar></ui>");
		this.menubar1 = ((global::Gtk.MenuBar)(this.UIManager.GetWidget ("/menubar1")));
		this.menubar1.Name = "menubar1";
		this.vbox1.Add (this.menubar1);
		global::Gtk.Box.BoxChild w2 = ((global::Gtk.Box.BoxChild)(this.vbox1 [this.menubar1]));
		w2.Position = 0;
		w2.Expand = false;
		w2.Fill = false;
		// Container child vbox1.Gtk.Box+BoxChild
		this.UIManager.AddUiFromString ("<ui><toolbar name='toolbar1'><toolitem name='newAction' action='newAction'/><toolitem name='openAction' action='openAction'/><toolitem name='saveAction' action='saveAction'/><toolitem name='saveAsAction' action='saveAsAction'/><separator/><toolitem name='cutAction' action='cutAction'/><toolitem name='copyAction' action='copyAction'/><toolitem name='pasteAction' action='pasteAction'/><separator/><toolitem name='printAction' action='printAction'/></toolbar></ui>");
		this.toolbar1 = ((global::Gtk.Toolbar)(this.UIManager.GetWidget ("/toolbar1")));
		this.toolbar1.Name = "toolbar1";
		this.toolbar1.ShowArrow = false;
		this.vbox1.Add (this.toolbar1);
		global::Gtk.Box.BoxChild w3 = ((global::Gtk.Box.BoxChild)(this.vbox1 [this.toolbar1]));
		w3.Position = 1;
		w3.Expand = false;
		w3.Fill = false;
		// Container child vbox1.Gtk.Box+BoxChild
		this.vpaned1 = new global::Gtk.VPaned ();
		this.vpaned1.CanFocus = true;
		this.vpaned1.Name = "vpaned1";
		this.vpaned1.Position = 335;
		// Container child vpaned1.Gtk.Paned+PanedChild
		this.hpaned1 = new global::Gtk.HPaned ();
		this.hpaned1.CanFocus = true;
		this.hpaned1.Name = "hpaned1";
		this.hpaned1.Position = 645;
		// Container child hpaned1.Gtk.Paned+PanedChild
		this.notebookEditor = new global::Gtk.Notebook ();
		this.notebookEditor.CanFocus = true;
		this.notebookEditor.Name = "notebookEditor";
		this.notebookEditor.CurrentPage = 0;
		// Container child notebookEditor.Gtk.Notebook+NotebookChild
		this.editorPane = new global::Gtk.HPaned ();
		this.editorPane.CanFocus = true;
		this.editorPane.Name = "editorPane";
		this.editorPane.Position = 29;
		// Container child editorPane.Gtk.Paned+PanedChild
		this.editorLines = new global::Gtk.TextView ();
		this.editorLines.CanFocus = true;
		this.editorLines.Name = "editorLines";
		this.editorLines.Editable = false;
		this.editorLines.CursorVisible = false;
		this.editorLines.Justification = ((global::Gtk.Justification)(1));
		this.editorPane.Add (this.editorLines);
		global::Gtk.Paned.PanedChild w4 = ((global::Gtk.Paned.PanedChild)(this.editorPane [this.editorLines]));
		w4.Resize = false;
		// Container child editorPane.Gtk.Paned+PanedChild
		this.GtkScrolledWindow1 = new global::Gtk.ScrolledWindow ();
		this.GtkScrolledWindow1.Name = "GtkScrolledWindow1";
		this.GtkScrolledWindow1.ShadowType = ((global::Gtk.ShadowType)(1));
		// Container child GtkScrolledWindow1.Gtk.Container+ContainerChild
		this.editorTextArea = new global::Gtk.TextView ();
		this.editorTextArea.CanFocus = true;
		this.editorTextArea.Name = "editorTextArea";
		this.GtkScrolledWindow1.Add (this.editorTextArea);
		this.editorPane.Add (this.GtkScrolledWindow1);
		this.notebookEditor.Add (this.editorPane);
		// Notebook tab
		this.fileNameLabel = new global::Gtk.Label ();
		this.fileNameLabel.Name = "fileNameLabel";
		this.fileNameLabel.LabelProp = global::Mono.Unix.Catalog.GetString ("Untitled.txt*");
		this.notebookEditor.SetTabLabel (this.editorPane, this.fileNameLabel);
		this.fileNameLabel.ShowAll ();
		this.hpaned1.Add (this.notebookEditor);
		global::Gtk.Paned.PanedChild w8 = ((global::Gtk.Paned.PanedChild)(this.hpaned1 [this.notebookEditor]));
		w8.Resize = false;
		// Container child hpaned1.Gtk.Paned+PanedChild
		this.notebookPanel = new global::Gtk.Notebook ();
		this.notebookPanel.CanFocus = true;
		this.notebookPanel.Name = "notebookPanel";
		this.notebookPanel.CurrentPage = 0;
		// Container child notebookPanel.Gtk.Notebook+NotebookChild
		this.GtkScrolledWindow2 = new global::Gtk.ScrolledWindow ();
		this.GtkScrolledWindow2.Name = "GtkScrolledWindow2";
		this.GtkScrolledWindow2.ShadowType = ((global::Gtk.ShadowType)(1));
		// Container child GtkScrolledWindow2.Gtk.Container+ContainerChild
		this.lexemeOutput = new global::Gtk.TextView ();
		this.lexemeOutput.CanFocus = true;
		this.lexemeOutput.Name = "lexemeOutput";
		this.GtkScrolledWindow2.Add (this.lexemeOutput);
		this.notebookPanel.Add (this.GtkScrolledWindow2);
		// Notebook tab
		this.label1 = new global::Gtk.Label ();
		this.label1.Name = "label1";
		this.label1.LabelProp = global::Mono.Unix.Catalog.GetString ("Lexico");
		this.notebookPanel.SetTabLabel (this.GtkScrolledWindow2, this.label1);
		this.label1.ShowAll ();
		// Notebook tab
		global::Gtk.Label w11 = new global::Gtk.Label ();
		w11.Visible = true;
		this.notebookPanel.Add (w11);
		this.label2 = new global::Gtk.Label ();
		this.label2.Name = "label2";
		this.label2.LabelProp = global::Mono.Unix.Catalog.GetString ("Sintactico");
		this.notebookPanel.SetTabLabel (w11, this.label2);
		this.label2.ShowAll ();
		this.hpaned1.Add (this.notebookPanel);
		this.vpaned1.Add (this.hpaned1);
		global::Gtk.Paned.PanedChild w13 = ((global::Gtk.Paned.PanedChild)(this.vpaned1 [this.hpaned1]));
		w13.Resize = false;
		// Container child vpaned1.Gtk.Paned+PanedChild
		this.GtkScrolledWindow = new global::Gtk.ScrolledWindow ();
		this.GtkScrolledWindow.Name = "GtkScrolledWindow";
		this.GtkScrolledWindow.ShadowType = ((global::Gtk.ShadowType)(1));
		// Container child GtkScrolledWindow.Gtk.Container+ContainerChild
		this.compilerOutput = new global::Gtk.TextView ();
		this.compilerOutput.CanFocus = true;
		this.compilerOutput.Name = "compilerOutput";
		this.GtkScrolledWindow.Add (this.compilerOutput);
		this.vpaned1.Add (this.GtkScrolledWindow);
		this.vbox1.Add (this.vpaned1);
		global::Gtk.Box.BoxChild w16 = ((global::Gtk.Box.BoxChild)(this.vbox1 [this.vpaned1]));
		w16.Position = 2;
		this.Add (this.vbox1);
		if ((this.Child != null)) {
			this.Child.ShowAll ();
		}
		this.DefaultWidth = 854;
		this.DefaultHeight = 528;
		this.Show ();
		this.DeleteEvent += new global::Gtk.DeleteEventHandler (this.OnDeleteEvent);
		this.newAction.Activated += new global::System.EventHandler (this.OnNewActionActivated);
		this.openAction.Activated += new global::System.EventHandler (this.OnOpenActionActivated);
		this.saveAction.Activated += new global::System.EventHandler (this.OnSaveActionActivated);
		this.saveAsAction.Activated += new global::System.EventHandler (this.OnSaveAsActionActivated);
		this.printAction.Activated += new global::System.EventHandler (this.OnCompileActivated);
		this.quitAction.Activated += new global::System.EventHandler (this.OnQuitActionActivated);
		this.editorTextArea.KeyReleaseEvent += new global::Gtk.KeyReleaseEventHandler (this.OnEditorTextAreaKeyReleaseEvent);
	}
}
